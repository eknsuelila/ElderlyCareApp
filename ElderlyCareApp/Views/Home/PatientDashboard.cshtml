@model ElderlyCareApp.Controllers.HomeController.PatientDashboardViewModel

@{
    ViewData["Title"] = Model?.Patient?.Name != null ? $"{Model.Patient.Name} - Dashboard" : "Patient Dashboard";
}

@if (Model?.Patient == null)
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="alert alert-danger">
                    <h4><i class="fas fa-exclamation-triangle"></i> Error</h4>
                    <p>Patient information could not be loaded. Please try again.</p>
                    <a asp-action="PatientSelection" class="btn btn-primary">
                        <i class="fas fa-users"></i> Back to Patient Selection
                    </a>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="container-fluid">
        <!-- Patient Header -->
        <div class="row mb-4">
            <div class="col-md-8">
                <div class="d-flex align-items-center">
                    <div class="me-3">
                        <i class="fas fa-user-circle fa-3x text-primary"></i>
                    </div>
                    <div>
                        <h1 class="mb-1">@Model.Patient.Name</h1>
                        @{
                            var age = DateTime.Now.Year - Model.Patient.DateOfBirth.Year;
                            if (Model.Patient.DateOfBirth > DateTime.Now.AddYears(-age)) age--;
                        }
                        <p class="text-muted mb-0">
                            @age years old
                            @if (!string.IsNullOrEmpty(Model.Patient.EmergencyContactName))
                            {
                                <br><small><i class="fas fa-phone"></i> Emergency: @Model.Patient.EmergencyContactName (@Model.Patient.EmergencyContactPhone)</small>
                            }
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-md-4 text-end">
                <div class="btn-group" role="group">
                    <a asp-controller="ElderlyPeople" asp-action="Edit" asp-route-id="@Model.Patient.Id" class="btn btn-outline-primary">
                        <i class="fas fa-edit"></i> Edit Patient
                    </a>
                    <a asp-controller="ElderlyPeople" asp-action="Delete" asp-route-id="@Model.Patient.Id" class="btn btn-outline-danger">
                        <i class="fas fa-trash"></i> Delete Patient
                    </a>
                </div>
                <a asp-action="ClearSelection" class="btn btn-outline-secondary me-2">
                    <i class="fas fa-users"></i> Change Patient
                </a>
                <a asp-controller="ElderlyPeople" asp-action="Details" asp-route-id="@Model.Patient.Id" class="btn btn-info">
                    <i class="fas fa-user"></i> View Profile
                </a>
            </div>
        </div>

        @{
            var currentUserRole = Context.Session.GetString("CurrentUserRole");
        }
        
        @if (currentUserRole == "Family")
        {
            <!-- AI Assistant Section - Only visible to Family users -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card border-primary shadow">
                        <div class="card-header bg-gradient-primary text-white">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">
                                    <i class="fas fa-robot me-2"></i> AI Health Assistant
                                </h5>
                                <div>
                                    <button type="button" class="btn btn-light btn-sm" onclick="getAIInsights()">
                                        <i class="fas fa-sync-alt me-1"></i> Get AI Insights
                                    </button>
                                    <button type="button" class="btn btn-light btn-sm" onclick="showAIChat()">
                                        <i class="fas fa-comments me-1"></i> Chat with AI
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div id="aiLoading" style="display: none;">
                                <div class="text-center py-4">
                                    <div class="spinner-border text-primary mb-3" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <h6 class="text-primary">AI is analyzing patient data...</h6>
                                    <p class="text-muted">Please wait while our AI assistant reviews @Model.Patient.Name's health information</p>
                                </div>
                            </div>
                            
                            <div id="aiInsights" style="display: none;">
                                <div class="row">
                                    <div class="col-12 mb-3">
                                        <div class="alert alert-primary border-0">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-brain fa-2x text-primary me-3"></i>
                                                <div>
                                                    <h6 class="mb-1 text-primary">AI Analysis Complete</h6>
                                                    <small class="text-muted">Based on @Model.Patient.Name's recent health data</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="col-12">
                                        <div id="aiContent" class="ai-content">
                                            <!-- AI content will be populated here with proper formatting -->
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div id="aiError" style="display: none;">
                                <div class="alert alert-danger border-0">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-exclamation-triangle fa-2x text-danger me-3"></i>
                                        <div>
                                            <h6 class="mb-1 text-danger">AI Service Unavailable</h6>
                                            <p class="mb-0">Unable to connect to AI assistant. Please try again later.</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div id="aiWelcome">
                                <div class="text-center py-3">
                                    <i class="fas fa-robot fa-3x text-primary mb-3"></i>
                                    <h6 class="text-primary">AI Health Assistant Ready</h6>
                                    <p class="text-muted mb-0">
                                        Click "Get AI Insights" to analyze @Model.Patient.Name's health data and receive personalized recommendations.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        <!-- Quick Stats -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="mb-0">@(Model.RecentActivities?.Count ?? 0)</h4>
                                <small>Recent Activities</small>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-walking fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="mb-0">@(Model.RecentMedications?.Count ?? 0)</h4>
                                <small>Recent Medications</small>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-pills fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-warning text-dark">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="mb-0">@(Model.RecentMeals?.Count ?? 0)</h4>
                                <small>Recent Meals</small>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-utensils fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-info text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="mb-0">@(Model.RecentAppointments?.Count ?? 0)</h4>
                                <small>Recent Appointments</small>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-calendar-alt fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- Recent Activities -->
            <div class="col-md-6 mb-4">
                <div class="card shadow h-100">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="fas fa-walking text-primary"></i> Recent Activities
                        </h5>
                        <a asp-controller="ActivityLogs" asp-action="Create" asp-route-patientId="@Model.Patient.Id" class="btn btn-sm btn-primary">
                            <i class="fas fa-plus"></i> Add Activity
                        </a>
                    </div>
                    <div class="card-body">
                        @if (Model.RecentActivities?.Any() == true)
                        {
                            <div class="list-group list-group-flush">
                                @foreach (var activity in Model.RecentActivities)
                                {
                                    <div class="list-group-item d-flex justify-content-between align-items-start">
                                        <div class="flex-grow-1">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <h6 class="mb-1">@activity.Description</h6>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-controller="ActivityLogs" asp-action="Edit" asp-route-id="@activity.Id" class="btn btn-outline-primary btn-sm">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-controller="ActivityLogs" asp-action="Delete" asp-route-id="@activity.Id" class="btn btn-outline-danger btn-sm">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </div>
                                            <p class="mb-1 text-muted">
                                                <i class="fas fa-clock"></i> @activity.StartTime.ToString("MMM dd, yyyy HH:mm")
                                                @if (activity.EndTime.HasValue)
                                                {
                                                    <span>- @activity.EndTime.Value.ToString("HH:mm")</span>
                                                }
                                            </p>
                                            <small class="text-muted">
                                                <i class="fas fa-user"></i> @(activity.User?.Name ?? "Unknown")
                                            </small>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted mb-0">No recent activities recorded.</p>
                        }
                    </div>
                </div>
            </div>

            <!-- Recent Medications -->
            <div class="col-md-6 mb-4">
                <div class="card shadow h-100">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="fas fa-pills text-success"></i> Recent Medications
                        </h5>
                        <a asp-controller="MedicationLogs" asp-action="Create" asp-route-patientId="@Model.Patient.Id" class="btn btn-sm btn-success">
                            <i class="fas fa-plus"></i> Add Medication
                        </a>
                    </div>
                    <div class="card-body">
                        @if (Model.RecentMedications?.Any() == true)
                        {
                            <div class="list-group list-group-flush">
                                @foreach (var medication in Model.RecentMedications)
                                {
                                    <div class="list-group-item d-flex justify-content-between align-items-start">
                                        <div class="flex-grow-1">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <h6 class="mb-1">@medication.MedicationName</h6>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-controller="MedicationLogs" asp-action="Edit" asp-route-id="@medication.Id" class="btn btn-outline-primary btn-sm">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-controller="MedicationLogs" asp-action="Delete" asp-route-id="@medication.Id" class="btn btn-outline-danger btn-sm">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </div>
                                            <p class="mb-1 text-muted">
                                                <i class="fas fa-clock"></i> @medication.Timestamp.ToString("MMM dd, yyyy HH:mm")
                                                <span class="badge @(medication.Taken ? "bg-success" : "bg-warning") ms-2">
                                                    @(medication.Taken ? "Taken" : "Missed")
                                                </span>
                                            </p>
                                            <small class="text-muted">
                                                <i class="fas fa-user"></i> @(medication.User?.Name ?? "Unknown")
                                                @if (!string.IsNullOrEmpty(medication.Dosage))
                                                {
                                                    <span>• @medication.Dosage</span>
                                                }
                                            </small>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted mb-0">No recent medications recorded.</p>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- Recent Meals -->
            <div class="col-md-6 mb-4">
                <div class="card shadow h-100">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="fas fa-utensils text-warning"></i> Recent Meals
                        </h5>
                        <a asp-controller="MealLogs" asp-action="Create" asp-route-patientId="@Model.Patient.Id" class="btn btn-sm btn-warning">
                            <i class="fas fa-plus"></i> Add Meal
                        </a>
                    </div>
                    <div class="card-body">
                        @if (Model.RecentMeals?.Any() == true)
                        {
                            <div class="list-group list-group-flush">
                                @foreach (var meal in Model.RecentMeals)
                                {
                                    <div class="list-group-item d-flex justify-content-between align-items-start">
                                        <div class="flex-grow-1">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <h6 class="mb-1">@meal.MealType - @meal.Description</h6>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-controller="MealLogs" asp-action="Edit" asp-route-id="@meal.Id" class="btn btn-outline-primary btn-sm">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-controller="MealLogs" asp-action="Delete" asp-route-id="@meal.Id" class="btn btn-outline-danger btn-sm">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </div>
                                            <p class="mb-1 text-muted">
                                                <i class="fas fa-clock"></i> @meal.MealTime.ToString("MMM dd, yyyy HH:mm")
                                            </p>
                                            <small class="text-muted">
                                                <i class="fas fa-user"></i> @(meal.User?.Name ?? "Unknown")
                                            </small>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted mb-0">No recent meals recorded.</p>
                        }
                    </div>
                </div>
            </div>

            <!-- Recent Appointments -->
            <div class="col-md-6 mb-4">
                <div class="card shadow h-100">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="fas fa-calendar-check text-info"></i> Recent Appointments
                        </h5>
                        <a asp-controller="AppointmentLogs" asp-action="Create" asp-route-patientId="@Model.Patient.Id" class="btn btn-sm btn-info">
                            <i class="fas fa-plus"></i> Add Appointment
                        </a>
                    </div>
                    <div class="card-body">
                        @if (Model.RecentAppointments?.Any() == true)
                        {
                            <div class="list-group list-group-flush">
                                @foreach (var appointment in Model.RecentAppointments)
                                {
                                    <div class="list-group-item d-flex justify-content-between align-items-start">
                                        <div class="flex-grow-1">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <h6 class="mb-1">@appointment.Title</h6>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-controller="AppointmentLogs" asp-action="Edit" asp-route-id="@appointment.Id" class="btn btn-outline-primary btn-sm">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-controller="AppointmentLogs" asp-action="Delete" asp-route-id="@appointment.Id" class="btn btn-outline-danger btn-sm">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </div>
                                            <p class="mb-1 text-muted">
                                                <i class="fas fa-clock"></i> @appointment.ScheduledDateTime.ToString("MMM dd, yyyy HH:mm")
                                                <span class="badge @(appointment.Status == AppointmentStatus.Completed ? "bg-success" : appointment.Status == AppointmentStatus.Scheduled ? "bg-primary" : "bg-warning") ms-2">
                                                    @appointment.Status
                                                </span>
                                            </p>
                                            <small class="text-muted">
                                                <i class="fas fa-user"></i> @(appointment.User?.Name ?? "Unknown")
                                                @if (!string.IsNullOrEmpty(appointment.ProviderName))
                                                {
                                                    <span>• @appointment.ProviderName</span>
                                                }
                                            </small>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted mb-0">No recent appointments recorded.</p>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Care Notes -->
        <div class="row">
            <div class="col-12 mb-4">
                <div class="card shadow">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="fas fa-sticky-note text-secondary"></i> Recent Care Notes
                        </h5>
                        <a asp-controller="CareNotes" asp-action="Create" asp-route-patientId="@Model.Patient.Id" class="btn btn-sm btn-secondary">
                            <i class="fas fa-plus"></i> Add Note
                        </a>
                    </div>
                    <div class="card-body">
                        @if (Model.RecentNotes?.Any() == true)
                        {
                            <div class="list-group list-group-flush">
                                @foreach (var note in Model.RecentNotes)
                                {
                                    <div class="list-group-item d-flex justify-content-between align-items-start">
                                        <div class="flex-grow-1">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <h6 class="mb-1">@note.Title</h6>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-controller="CareNotes" asp-action="Edit" asp-route-id="@note.Id" class="btn btn-outline-primary btn-sm">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-controller="CareNotes" asp-action="Delete" asp-route-id="@note.Id" class="btn btn-outline-danger btn-sm">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </div>
                                            <p class="mb-1 text-muted">
                                                <i class="fas fa-clock"></i> @note.CreatedAt.ToString("MMM dd, yyyy HH:mm")
                                                <span class="badge bg-secondary ms-2">@note.NoteType</span>
                                            </p>
                                            <small class="text-muted">
                                                <i class="fas fa-user"></i> @(note.User?.Name ?? "Unknown")
                                                @if (!string.IsNullOrEmpty(note.Content))
                                                {
                                                    <span>• @(note.Content.Length > 50 ? note.Content.Substring(0, 50) + "..." : note.Content)</span>
                                                }
                                            </small>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted mb-0">No recent care notes recorded.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
} 

@section Scripts {
    <style>
        .bg-gradient-primary {
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        }
        
        .ai-content {
            font-size: 0.95rem;
            line-height: 1.6;
            white-space: pre-line;
        }
        
        /* AI Insights Styling */
        .ai-insights-container {
            padding: 1rem;
        }
        
        .ai-main-heading {
            color: #2c3e50;
            font-weight: 600;
            border-bottom: 3px solid #f39c12;
            padding-bottom: 0.5rem;
        }
        
        .ai-section-card {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 1.5rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }
        
        .ai-section-card:hover {
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
            transform: translateY(-2px);
        }
        
        .ai-section-title {
            color: #495057;
            font-weight: 600;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #dee2e6;
            font-size: 1.1rem;
        }
        
        .ai-section-content {
            color: #6c757d;
            line-height: 1.6;
            font-size: 0.95rem;
        }
        
        /* Specific section styling */
        .ai-section-card:nth-child(2) .ai-section-title {
            border-bottom-color: #dc3545;
            color: #dc3545;
        }
        
        .ai-section-card:nth-child(3) .ai-section-title {
            border-bottom-color: #28a745;
            color: #28a745;
        }
        
        .ai-section-card:nth-child(4) .ai-section-title {
            border-bottom-color: #17a2b8;
            color: #17a2b8;
        }
        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        

        
    </style>
    
    <script>
        function getAIInsights() {
            const patientId = @Model.Patient.Id;
            
            // Show loading state
            document.getElementById('aiWelcome').style.display = 'none';
            document.getElementById('aiInsights').style.display = 'none';
            document.getElementById('aiError').style.display = 'none';
            document.getElementById('aiLoading').style.display = 'block';
            
            fetch(`/Home/GetAIInsights?patientId=${patientId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.text(); // Get response as text instead of JSON
                })
                .then(responseText => {
                    console.log('Raw AI Response:', responseText); // Debug log
                    
                    document.getElementById('aiLoading').style.display = 'none';
                    
                    try {
                        // Try to parse as JSON first
                        const data = JSON.parse(responseText);
                        
                        if (data.success) {
                            // Use the second response if available, otherwise use the first
                            let selectedResponse = '';
                            
                            if (data.responseInfo && data.responseInfo.secondResponse) {
                                selectedResponse = data.responseInfo.secondResponse;
                                console.log('Using second AI response:', selectedResponse);
                            } else if (data.responseInfo && data.responseInfo.firstResponse) {
                                selectedResponse = data.responseInfo.firstResponse;
                                console.log('Using first AI response (fallback):', selectedResponse);
                            } else if (data.insights && data.insights.length > 0) {
                                // Fallback to old format
                                selectedResponse = data.insights.join('\n\n');
                                console.log('Using combined insights (legacy):', selectedResponse);
                            }
                            
                            document.getElementById('aiContent').innerHTML = formatAIResponse(selectedResponse);
                            document.getElementById('aiInsights').style.display = 'block';
                        } else {
                            document.getElementById('aiError').style.display = 'block';
                        }
                    } catch (jsonError) {
                        // If JSON parsing fails, treat the response as plain text
                        console.log('Response is not JSON, treating as plain text');
                        document.getElementById('aiContent').innerHTML = formatAIResponse(responseText);
                        document.getElementById('aiInsights').style.display = 'block';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('aiLoading').style.display = 'none';
                    document.getElementById('aiError').style.display = 'block';
                });
        }

        function showAIChat() {
            // This will open a modal or redirect to a chat interface
            alert('AI Chat feature coming soon! This will allow direct conversation with the AI assistant.');
        }

        function formatAIResponse(response) {
            // Add main heading
            let formattedResponse = '<div class="ai-insights-container">';
            formattedResponse += '<h3 class="ai-main-heading mb-4"><i class="fas fa-lightbulb text-warning me-2"></i>Insights for Patient</h3>';
            
            // Process the response to format Markdown sections
            let sections = response.split('###');
            
            if (sections.length > 1) {
                // Process each section
                for (let i = 1; i < sections.length; i++) {
                    let section = sections[i].trim();
                    let lines = section.split('\n');
                    let sectionTitle = lines[0].trim();
                    let sectionContent = lines.slice(1).join('\n').trim();
                    
                    // Create section card
                    formattedResponse += '<div class="ai-section-card mb-3">';
                    formattedResponse += `<h4 class="ai-section-title">${sectionTitle}</h4>`;
                    formattedResponse += `<div class="ai-section-content">${sectionContent.replace(/\n/g, '<br>')}</div>`;
                    formattedResponse += '</div>';
                }
            } else {
                // If no sections, just display as plain text
                formattedResponse += `<div class="ai-content">${response.replace(/\n/g, '<br>')}</div>`;
            }
            
            formattedResponse += '</div>';
            return formattedResponse;
        }










    </script>
} 