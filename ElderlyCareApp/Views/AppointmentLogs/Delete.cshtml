@model ElderlyCareApp.Models.AppointmentLog

@{
    ViewData["Title"] = "Delete Appointment";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-8">
            <div class="card shadow border-danger">
                <div class="card-header bg-danger text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-trash"></i> Delete Appointment
                    </h4>
                </div>
                <div class="card-body">
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle"></i>
                        <strong>Warning:</strong> Are you sure you want to delete this appointment? This action cannot be undone.
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <dl class="row">
                                <dt class="col-sm-4">Title</dt>
                                <dd class="col-sm-8">@Model.Title</dd>

                                <dt class="col-sm-4">Type</dt>
                                <dd class="col-sm-8">
                                    <span class="badge bg-info">@Model.AppointmentType</span>
                                </dd>

                                <dt class="col-sm-4">Status</dt>
                                <dd class="col-sm-8">
                                    @{
                                        var statusClass = Model.Status switch
                                        {
                                            AppointmentStatus.Scheduled => "bg-warning",
                                            AppointmentStatus.Completed => "bg-success",
                                            AppointmentStatus.Cancelled => "bg-danger",
                                            _ => "bg-secondary"
                                        };
                                    }
                                    <span class="badge @statusClass">@Model.Status</span>
                                </dd>
                            </dl>
                        </div>
                        <div class="col-md-6">
                            <dl class="row">
                                <dt class="col-sm-4">Patient</dt>
                                <dd class="col-sm-8">@Model.ElderlyPerson?.Name</dd>

                                <dt class="col-sm-4">Logged By</dt>
                                <dd class="col-sm-8">@Model.User?.Name</dd>

                                <dt class="col-sm-4">Scheduled For</dt>
                                <dd class="col-sm-8">@Model.ScheduledDateTime.ToString("MMM dd, yyyy HH:mm")</dd>
                            </dl>
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.ProviderName) || !string.IsNullOrEmpty(Model.Location))
                    {
                        <div class="row mt-3">
                            @if (!string.IsNullOrEmpty(Model.ProviderName))
                            {
                                <div class="col-md-6">
                                    <dl class="row">
                                        <dt class="col-sm-4">Provider</dt>
                                        <dd class="col-sm-8">@Model.ProviderName</dd>
                                    </dl>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.Location))
                            {
                                <div class="col-md-6">
                                    <dl class="row">
                                        <dt class="col-sm-4">Location</dt>
                                        <dd class="col-sm-8">@Model.Location</dd>
                                    </dl>
                                </div>
                            }
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <div class="row mt-3">
                            <div class="col-12">
                                <h6>Description</h6>
                                <p class="text-muted">@Model.Description</p>
                            </div>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.Notes))
                    {
                        <div class="row mt-3">
                            <div class="col-12">
                                <h6>Notes</h6>
                                <p class="text-muted">@Model.Notes</p>
                            </div>
                        </div>
                    }
                </div>
                <div class="card-footer">
                    <form asp-action="Delete" method="post" class="d-inline">
                        <input type="hidden" asp-for="Id" />
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash"></i> Confirm Delete
                        </button>
                    </form>
                    <a href="#" onclick="returnToPatientDashboard()" class="btn btn-info">
                        <i class="fas fa-user"></i> Return to Patient Dashboard
                    </a>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Cancel
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function returnToPatientDashboard() {
            var patientId = @Model.ElderlyPersonId;
            if (patientId) {
                window.location.href = '@Url.Action("PatientDashboard", "Home")?patientId=' + patientId;
            } else {
                // Fallback to index if no patient ID
                return false;
            }
            return false;
        }
    </script>
}
